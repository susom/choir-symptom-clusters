% The previous R function used only one coding scheme based on the male body map manikin.
% Here we use different coding schemes for male and female body map
% manikins.
% The script requires to transform the body_map list of segments generated by CHOIR,
% which is deliminated by a comma, into a new column in the xlsx file.
% Instructions for moving the data to new cells: 1. click the "data" tab
% 2. click "text to columns" 3. click "next" then check "commas" as the
% deliminator 4. click "finish"
% Note this also requires the gender data.

%reading the relevant datasets
clear all;
cd('\\pain-srvr\mackeylab\Mackeylab\Individual_Folders\Gadi\CHOIR Symptom Cluster\__final results\body_map_regions_correction\');
files=dir('all*.xlsx');

[num ,txt]=xlsread(fullfile(files(1).name));

results{1,1}=txt{1,1}; %MRN
results{1,2}=txt{1,2}; %dataset
results{1,3}=txt{1,3}; %cluster
results{1,4}=txt{1,4}; %gender
results{1,5}='FrontHead';
results{1,6}='BackHead';
results{1,7}='Neck';
results{1,8}='ChestAbdomen';
results{1,9}='UpperBack';
results{1,10}='LowerBack';
results{1,11}='Pelvic';
results{1,12}='R_Arm';
results{1,13}='L_Arm';
results{1,14}='R_Leg';
results{1,15}='L_Leg';

for row=2:length(num)+1 %each row is a participant
    
    results{row,1}=num(row-1,1);
    results{row,2}=txt{row,2};
    results{row,3}=num(row-1,3);
    results{row,4}=txt{row,4};
    
    %deciding which segemnt_to_region dictionary to use based on gender.
    %if male then uses the male manikin; if female or empty uses the female
    %manikin
    try gender_length=length(results{row,4});
    catch gender_length=0;
    end
    
    if gender_length==4 %this means the participant used the male manikin
        FrontHead = [101, 102, 103, 104];
        BackHead = [201, 202, 203, 204];
        Neck = [105, 106, 205, 206];
        ChestAbdomen = [108, 109, 116, 117];
        UpperBack = [208, 209, 212, 213];
        LowerBack = [218, 219];
        Pelvic = [121, 122];
        R_Arm = [107, 111, 113, 115, 119, 125, 210, 214, 216, 220, 226, 230];
        L_Arm = [110, 112, 114, 118, 124, 128, 207, 211, 215, 217, 221, 227];
        R_Leg = [120, 126, 129, 131, 133, 135, 224, 225, 229, 232, 234, 236, 238];
        L_Leg = [123, 127, 130, 132, 134, 136, 222, 223, 228, 231, 233, 235, 237];
    else %this means the particiapnt used the female manikin
        FrontHead = [101, 102, 103, 104];
        BackHead = [201, 202, 203, 204];
        Neck = [105, 106, 205, 206];
        ChestAbdomen = [108, 109, 112, 113]; %
        UpperBack = [208, 209, 212, 213];
        LowerBack = [218, 219];
        Pelvic = [121, 122];
        R_Arm = [107, 111, 115, 117, 119, 125, 210, 214, 216, 220, 226, 230]; %
        L_Arm = [110, 114, 116, 118, 124, 128, 207, 211, 215, 217, 221, 227]; %
        R_Leg = [120, 126, 129, 131, 133, 135, 224, 225, 229, 232, 234, 236, 238];
        L_Leg = [123, 127, 130, 132, 134, 136, 222, 223, 228, 231, 233, 235, 237];
    end
    
    %will count the number of segments in each region to verify total number
    %is correct
    FrontHead_count = 0;
    BackHead_count = 0;
    Neck_count = 0;
    ChestAbdomen_count = 0;
    UpperBack_count = 0;
    LowerBack_count = 0;
    Pelvic_count = 0;
    R_Arm_count = 0;
    L_Arm_count = 0;
    R_Leg_count = 0;
    L_Leg_count = 0;
    
    for col=5:78 %each column is a body region, with a max of 74 regions
        
        %break if there are no more body segements
        if isnan(num(row-1,col))
            break
        end
        
        %count the segemnts per region to verify congruency with previous
        %results
        if ismember(num(row-1,col), FrontHead)
            FrontHead_count=FrontHead_count+1;
        elseif ismember(num(row-1,col), BackHead)
            BackHead_count=BackHead_count+1;
        elseif ismember(num(row-1,col), Neck)
            Neck_count=Neck_count+1;
        elseif ismember(num(row-1,col), ChestAbdomen)
            ChestAbdomen_count=ChestAbdomen_count+1;
        elseif ismember(num(row-1,col), UpperBack)
            UpperBack_count=UpperBack_count+1;
        elseif ismember(num(row-1,col), LowerBack)
            LowerBack_count=LowerBack_count+1;
        elseif ismember(num(row-1,col), Pelvic)
            Pelvic_count=Pelvic_count+1;
        elseif ismember(num(row-1,col), R_Arm)
            R_Arm_count=R_Arm_count+1;
        elseif ismember(num(row-1,col), L_Arm)
            L_Arm_count=L_Arm_count+1;
        elseif ismember(num(row-1,col), R_Leg)
            R_Leg_count=R_Leg_count+1;
        elseif ismember(num(row-1,col), L_Leg)
            L_Leg_count=L_Leg_count+1;
        end
    end
    
    %calculate the sum
    total_regions=FrontHead_count+BackHead_count+Neck_count+ChestAbdomen_count+UpperBack_count+LowerBack_count+Pelvic_count+R_Arm_count+L_Arm_count+R_Leg_count+L_Leg_count;
    
    %adding the calculated data to the results
    if total_regions==0
        results{row,5}=0; %0 in case of no regions at all
    elseif total_regions==col-5 %verifying the sum of regions is congruent
        results{row,5}=FrontHead_count;
        results{row,6}=BackHead_count;
        results{row,7}=Neck_count;
        results{row,8}=ChestAbdomen_count;
        results{row,9}=UpperBack_count;
        results{row,10}=LowerBack_count;
        results{row,11}=Pelvic_count;
        results{row,12}=R_Arm_count;
        results{row,13}=L_Arm_count;
        results{row,14}=R_Leg_count;
        results{row,15}=L_Leg_count;
    elseif total_regions==74 %in case someone marks all segments
        results{row,5}=FrontHead_count;
        results{row,6}=BackHead_count;
        results{row,7}=Neck_count;
        results{row,8}=ChestAbdomen_count;
        results{row,9}=UpperBack_count;
        results{row,10}=LowerBack_count;
        results{row,11}=Pelvic_count;
        results{row,12}=R_Arm_count;
        results{row,13}=L_Arm_count;
        results{row,14}=R_Leg_count;
        results{row,15}=L_Leg_count;
    else
        results{row,5}=999; %999 for incongruent sum of regions
    end
end

% saves the data
writetable(cell2table(results),[files(1).name(1:end-5) '_calc_body_regions.xls']);

